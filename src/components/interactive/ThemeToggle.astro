---
// Theme toggle for coffee/bourbon modes
---

<button
  id="theme-toggle"
  aria-label="Toggle theme"
  class="relative flex items-center justify-center w-10 h-10 rounded-full transition-colors hover:bg-[var(--color-bg-secondary)]"
>
  <!-- Coffee Icon (Light Mode) -->
  <svg 
    xmlns="http://www.w3.org/2000/svg" 
    viewBox="0 0 24 24" 
    fill="none" 
    stroke="currentColor" 
    stroke-width="2" 
    stroke-linecap="round" 
    stroke-linejoin="round" 
    class="w-5 h-5 theme-coffee-icon absolute transition-opacity duration-300"
    data-theme-coffee
  >
    <path d="M18 8h1a4 4 0 0 1 0 8h-1"></path>
    <path d="M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z"></path>
    <line x1="6" y1="1" x2="6" y2="4"></line>
    <line x1="10" y1="1" x2="10" y2="4"></line>
    <line x1="14" y1="1" x2="14" y2="4"></line>
  </svg>
  
  <!-- Bourbon Icon (Dark Mode) -->
  <svg 
    xmlns="http://www.w3.org/2000/svg" 
    viewBox="0 0 24 24" 
    fill="none" 
    stroke="currentColor" 
    stroke-width="2" 
    stroke-linecap="round" 
    stroke-linejoin="round" 
    class="w-5 h-5 theme-bourbon-icon absolute transition-opacity duration-300"
    data-theme-bourbon
  >
    <path d="M8 22l2-2h4l2 2"></path>
    <path d="M10 10v9.5"></path>
    <path d="M14 10v9.5"></path>
    <path d="M3 17c0-2 2-5 8-5s8 3 8 5"></path>
    <path d="M5 17c0-1 1-3 5-3s5 2 5 3"></path>
    <path d="M12 2v4"></path>
    <path d="M9 6h6l-3 6z"></path>
  </svg>
</button>

<script>
  const themeToggle = document.getElementById('theme-toggle');
  const coffeeIcon = document.querySelector('[data-theme-coffee]');
  const bourbonIcon = document.querySelector('[data-theme-bourbon]');
  
  // Initialize theme state
  function updateThemeDisplay() {
    const currentTheme = localStorage.getItem('theme') || 'coffee';
    document.documentElement.className = '';
    document.documentElement.classList.add(`theme-${currentTheme}`);
    
    // Toggle icon visibility
    if (coffeeIcon && bourbonIcon) {
      if (currentTheme === 'coffee') {
        coffeeIcon.classList.add('opacity-0');
        bourbonIcon.classList.remove('opacity-0');
      } else {
        coffeeIcon.classList.remove('opacity-0');
        bourbonIcon.classList.add('opacity-0');
      }
    }
  }
  
  // Set initial state
  updateThemeDisplay();
  
  // Toggle theme
  if (themeToggle) {
    themeToggle.addEventListener('click', () => {
      const currentTheme = localStorage.getItem('theme') || 'coffee';
      const newTheme = currentTheme === 'coffee' ? 'bourbon' : 'coffee';
      
      localStorage.setItem('theme', newTheme);
      updateThemeDisplay();
    });
  }
</script>